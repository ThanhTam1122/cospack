name: Build macOS App with PyInstaller

on:
  push:
    branches: [feature/5_5_feedback]

jobs:
  build-mac:
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller fastapi uvicorn sqlalchemy pymssql pydantic pydantic-settings python-multipart requests PySide6
          python -m pip install -r requirements.txt

      - name: Create spec file
        run: |
          mkdir -p pyinstaller
          cat > pyinstaller/shipping_app_darwin.spec << EOF
          # -*- mode: python ; coding: utf-8 -*-
          
          block_cipher = None
          
          a = Analysis(
              ['main.py'],
              pathex=[os.path.abspath('.')],
              binaries=[],
              datas=[("app", "app")],
              hiddenimports=[
                  # FastAPI and dependencies
                  'fastapi', 'fastapi.middleware', 'fastapi.middleware.cors',
                  'pydantic', 'pydantic_core', 'pydantic_settings', 'pydantic.json',
                  'starlette', 'starlette.middleware', 'starlette.middleware.cors',
                  'starlette.responses', 'starlette.routing', 'starlette.applications',
                  'starlette.types', 'starlette.datastructures', 'starlette.background',
                  'starlette.concurrency', 'starlette.config', 'starlette.exceptions',
                  'starlette.staticfiles', 'starlette.templating', 'starlette.websockets',
                  # Uvicorn and dependencies
                  'uvicorn', 'uvicorn.logging', 'uvicorn.loops', 'uvicorn.loops.auto',
                  'uvicorn.protocols', 'uvicorn.protocols.http', 'uvicorn.protocols.http.auto',
                  'uvicorn.protocols.websockets', 'uvicorn.protocols.websockets.auto',
                  'uvicorn.lifespan', 'uvicorn.lifespan.on', 'uvicorn.lifespan.off',
                  'uvicorn.protocols.http.h11_impl', 'uvicorn.protocols.http.httptools_impl',
                  'uvicorn.protocols.websockets.websockets_impl', 'uvicorn.protocols.websockets.wsproto_impl',
                  # SQLAlchemy and database
                  'sqlalchemy', 'sqlalchemy.ext.declarative', 'sqlalchemy.orm',
                  # Request handling
                  'requests',
                  # macOS specific drivers
                  'pymssql', 'sqlalchemy.dialects.mssql.pymssql',
                  # UI components
                  'PySide6', 'PySide6.QtCore', 'PySide6.QtGui', 'PySide6.QtWidgets', 'PySide6.QtNetwork',
                  # App modules
                  'app', 'app.main'
              ],
              hookspath=[],
              hooksconfig={},
              runtime_hooks=[],
              excludes=[],
              win_no_prefer_redirects=False,
              win_private_assemblies=False,
              cipher=block_cipher,
              noarchive=False,
          )
          
          pyz = PYZ(a.pure, a.zipped_data, cipher=block_cipher)
          
          exe = EXE(
              pyz,
              a.scripts,
              a.binaries,
              a.zipfiles,
              a.datas,
              [],
              name='ShippingApp',
              debug=False,
              bootloader_ignore_signals=False,
              strip=False,
              upx=True,
              upx_exclude=[],
              runtime_tmpdir=None,
              console=False,
              disable_windowed_traceback=False,
              argv_emulation=True,
              target_arch=None,
              codesign_identity=None,
              entitlements_file=None,
          )
          
          app = BUNDLE(
              exe,
              name='shipping-app.app',
              icon=None,
              bundle_identifier='com.company.shippingapp',
              info_plist={
                  'CFBundleDisplayName': 'Shipping App',
                  'CFBundleName': 'ShippingApp',
                  'CFBundlePackageType': 'APPL',
                  'CFBundleShortVersionString': '1.0.0',
                  'NSHighResolutionCapable': True,
                  'NSPrincipalClass': 'NSApplication',
              }
          )
          EOF

      - name: Build macOS app with PyInstaller
        run: |
          python -m PyInstaller --clean pyinstaller/shipping_app_darwin.spec

      - name: Create launcher script
        run: |
          mkdir -p dist
          cat > dist/run_shipping_app.command << EOF
          #!/bin/bash
          # macOS launcher script for Shipping App
          DIR="\$( cd "\$( dirname "\${BASH_SOURCE[0]}" )" && pwd )"
          cd "\$DIR"
          open ./shipping-app.app
          EOF
          chmod +x dist/run_shipping_app.command

      - name: Upload built app
        uses: actions/upload-artifact@v4
        with:
          name: macos-app
          path: |
            dist/shipping-app.app
            dist/run_shipping_app.command
